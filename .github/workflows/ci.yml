name: Events API

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Maven 3.9.9
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: '3.9.9'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build and run tests
        run: mvn clean verify

      - name: Run SonarQube analysis
        if: |
          github.ref == 'refs/heads/main' ||
          (github.event_name == 'pull_request' && github.base_ref == 'main')
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=KrstfP_events \
          -Dsonar.organization=Krstf \
          -Dsonar.token=$SONAR_TOKEN

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: target/site/jacoco/jacoco.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: KrstfP/events

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Run mutation tests
        run: |
          mvn test-compile org.pitest:pitest-maven:mutationCoverage          
          python3 ci/generate-mutation-json.py ./target/pit-reports/mutations.xml ./target/pit-reports/mutation-score.json         

      - name: Publish mutation testing report
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/pit-reports
          publish_branch: gh-pages
          destination_dir: pit-reports

      - name: Compare mutation score with previous version
        if: github.event_name == 'pull_request'
        run: |
          # Get previous mutation score from GitHub Pages (if it exists)
          PREV_URL="https://krstfp.github.io/events/pit-reports/mutation-score.json"
          echo "Fetching previous score from $PREV_URL..."
          curl -s -o prev.json $PREV_URL || echo '{"message": "0"}' > prev.json
          
          PREV_SCORE=$(jq -r '.message' prev.json | tr -d '%')
          CURR_SCORE=$(jq -r '.message' ./target/pit-reports/mutation-score.json | tr -d '%')
          
          echo "Previous score: $PREV_SCORE"
          echo "Current score: $CURR_SCORE"
          
          DELTA=$(echo "$CURR_SCORE - $PREV_SCORE" | bc)
          echo "delta=$DELTA" >> $GITHUB_ENV
          echo "prev_score=$PREV_SCORE" >> $GITHUB_ENV
          echo "curr_score=$CURR_SCORE" >> $GITHUB_ENV

      - name: Comment mutation score on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prev = parseFloat(process.env.prev_score);
            const curr = parseFloat(process.env.curr_score);
            const delta = parseFloat(process.env.delta);
            const trend = delta > 0 ? '📈 Increased' : delta < 0 ? '📉 Decreased' : '➖ Unchanged';
            const emoji = delta < 0 ? '⚠️' : '✅';
            const body = `
            🧬 **Mutation Testing Results**
            > Current: **${curr}%**  
            > Previous: **${prev}%**  
            > ${trend} by ${Math.abs(delta)}% ${emoji}
            `;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });